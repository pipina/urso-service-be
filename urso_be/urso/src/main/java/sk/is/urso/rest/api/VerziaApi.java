/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package sk.is.urso.rest.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;
import sk.is.urso.rest.model.Verzia;

import javax.annotation.Generated;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-29T11:27:41.522351500+02:00[Europe/Bratislava]")
@Validated
@Tag(name = "Verzia", description = "the Verzia API")
public interface VerziaApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /verzia
     * Služba vráti verziu aplikácie. Služba je možné overiť dostupnosť systému
     *
     * @return Verzia aplikácie bola vrátená korektne (status code 200)
     *         or Neočakavaná chyba aplikácie (status code 200)
     */
    @Operation(
        operationId = "getVerzia",
        tags = { "Verzia" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Verzia aplikácie bola vrátená korektne", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Verzia.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/verzia",
        produces = { "application/json" }
    )
    default ResponseEntity<Verzia> getVerzia(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"version\" : \"version\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
