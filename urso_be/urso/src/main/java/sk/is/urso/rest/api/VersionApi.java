/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package sk.is.urso.rest.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;
import sk.is.urso.rest.model.Version;

import javax.annotation.Generated;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-10-26T09:59:21.066787900+02:00[Europe/Berlin]")
@Validated
@Tag(name = "version", description = "the version API")
public interface VersionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /version
     * služba vráti verziu aplikácie, služba je dostupná každému, je možné ňou overiť dostupnosť systému
     *
     * @return verzia aplikácie bola vrátená korektne (status code 200)
     *         or neočakavaná chyba aplikácie (status code 200)
     */
    @Operation(
        operationId = "versionGet",
        tags = { "VersionController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "verzia aplikácie bola vrátená korektne", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Version.class))
            }),
            @ApiResponse(responseCode = "200", description = "neočakavaná chyba aplikácie", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/version",
        produces = { "application/json" }
    )
    default ResponseEntity<Version> versionGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"version\" : \"version\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
