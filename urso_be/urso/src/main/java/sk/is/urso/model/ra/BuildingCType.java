//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.08.10 at 08:23:59 AM CEST 
//


package sk.is.urso.model.ra;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BuildingCType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BuildingCType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="BuildingName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="BuildingPurpose" type="{http://www.dominanz.sk/UVZ/Reg/ADDRESS}CodelistDataElementCType" minOccurs="0"/&gt;
 *         &lt;element name="BuildingTypeCode" type="{http://www.dominanz.sk/UVZ/Reg/ADDRESS}CodelistDataElementCType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="ContainsFlats" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BuildingCType", propOrder = {
    "buildingName",
    "buildingPurpose",
    "buildingTypeCode"
})
public class BuildingCType {

    @XmlElement(name = "BuildingName")
    protected String buildingName;
    @XmlElement(name = "BuildingPurpose")
    protected CodelistDataElementCType buildingPurpose;
    @XmlElement(name = "BuildingTypeCode")
    protected CodelistDataElementCType buildingTypeCode;
    @XmlAttribute(name = "ContainsFlats", required = true)
    protected boolean containsFlats;

    /**
     * Gets the value of the buildingName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBuildingName() {
        return buildingName;
    }

    /**
     * Sets the value of the buildingName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBuildingName(String value) {
        this.buildingName = value;
    }

    /**
     * Gets the value of the buildingPurpose property.
     * 
     * @return
     *     possible object is
     *     {@link CodelistDataElementCType }
     *     
     */
    public CodelistDataElementCType getBuildingPurpose() {
        return buildingPurpose;
    }

    /**
     * Sets the value of the buildingPurpose property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodelistDataElementCType }
     *     
     */
    public void setBuildingPurpose(CodelistDataElementCType value) {
        this.buildingPurpose = value;
    }

    /**
     * Gets the value of the buildingTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link CodelistDataElementCType }
     *     
     */
    public CodelistDataElementCType getBuildingTypeCode() {
        return buildingTypeCode;
    }

    /**
     * Sets the value of the buildingTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodelistDataElementCType }
     *     
     */
    public void setBuildingTypeCode(CodelistDataElementCType value) {
        this.buildingTypeCode = value;
    }

    /**
     * Gets the value of the containsFlats property.
     * 
     */
    public boolean isContainsFlats() {
        return containsFlats;
    }

    /**
     * Sets the value of the containsFlats property.
     * 
     */
    public void setContainsFlats(boolean value) {
        this.containsFlats = value;
    }

}
