//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.09.12 at 01:05:55 PM CEST 
//


package sk.is.urso.model.subject.detailIfo;

import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.List;


/**
 * Poskytované údaje o osobe.
 * 
 * <p>Java class for TOEX_OEIOList complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TOEX_OEIOList"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OEX" type="{http://www.egov.sk/mvsr/RFO/datatypes/Podp/Ext/PoskytnutieUdajovIFOOnlineWS-v1.0.xsd}TOEX_OEIO" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TOEX_OEIOList", propOrder = {
    "oex"
})
public class TOEXOEIOList implements ToString2
{

    @XmlElement(name = "OEX")
    protected List<TOEXOEIO> oex;

    /**
     * Gets the value of the oex property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the oex property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOEX().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TOEXOEIO }
     * 
     * 
     */
    public List<TOEXOEIO> getOEX() {
        if (oex == null) {
            oex = new ArrayList<TOEXOEIO>();
        }
        return this.oex;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            List<TOEXOEIO> theOEX;
            theOEX = (((this.oex!= null)&&(!this.oex.isEmpty()))?this.getOEX():null);
            strategy.appendField(locator, this, "oex", buffer, theOEX, ((this.oex!= null)&&(!this.oex.isEmpty())));
        }
        return buffer;
    }

}
